@import url('https://fonts.googleapis.com/css2?family=Lato&family=Poppins:wght@700&display=swap');

/* Resets, definições de váriaveis e estilos padrões do site */

:root {
  --body-bg-color: #eee;
  --gerador-bg-color: white;
  --primary-text-color: #333;
  --svg-fill-color: #777;
  --border-color: #d3d3d3;
  --focus-border-color: #fb1;
  --focus-shadow-color: #fea;
}

* {
  box-sizing: border-box;
}

h3 {
  font-family: 'Poppins', Arial, Helvetica, sans-serif;
  font-weight: bold;
  margin: 0;
  color: var(--primary-text-color);
  display: inline-block;
  position: relative;
}

h3::after {
  content: ' ';
  position: absolute;
  right: 0;
  left: 0;
  bottom: 0px;
  height: 3px;
  background-color: var(--focus-border-color);
}

p,
input,
span,
button,
.cbxLbl,
.radioLbl {
  font-family: 'Lato', Arial, Helvetica, sans-serif;
  font-size: 1rem;
  color: var(--primary-text-color);
}

p {
  margin: 0.2rem 0;
}

input {
  border: none;
  background-color: transparent;
}

input:focus,
button:focus {
  outline: none;
}

hr {
  color: var(--primary-text-color);
}

body {
  margin: 0;
  padding: 0;
}

.border-focus {
  border: 1px solid var(--border-color);
  border-radius: 10px;
  transition: all 0.2s;
}

.border-focus:focus,
.border-focus:focus-within,
.border-focus:hover {
  border-color: var(--focus-border-color);
  box-shadow: 0 0 2px 3px var(--focus-shadow-color);
}

/* Adiciona cor de fundo pro site e mantem o conteúdo sempre centralizado  */

.content {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100vw;
  height: 100vh;
  background-color: var(--body-bg-color);
}

/* Definindo tamanho máximo para o corpo do conteúdo, espaçamento entre filhos e definindo animação para load */

.gerador-container {
  width: max(40vw, min(750px, 100%));
  background-color: var(--gerador-bg-color);
  border-radius: 10px;
  padding: 0.5rem 0.625rem;
  margin: 1rem;
  border: 1px solid var(--border-color);
  box-shadow: 1px 1px 3px var(--border-color);
}

.gerador-container > * + * {
  margin-top: 1rem;
}

.gerador-container.active {
  animation: slideDown 0.2s forwards ease-in;
}

/* Estilização do campo de output , copy e reload da senha */

.gerador-password {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: 0.25rem;
}
.gerador-input,
.gerador-reload,
.gerador-copy {
  display: inline-block;
}

.gerador-input {
  cursor: copy;
  width: 100%;
}

.gerador-reload,
.gerador-copy {
  width: 1.25rem;
  height: 1.25rem;
  margin-left: 0.5rem;
  position: relative;
  cursor: pointer;
  transition: filter 0.2s;
}

.gerador-reload > svg,
.gerador-copy > svg {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  left: 0;
  right: 0;
  margin: auto;
  text-align: center;
}

.gerador-reload > svg > path,
.gerador-copy > svg > path {
  fill: var(--svg-fill-color);
  transition: all 0.2s;
}

.gerador-reload:hover > svg > path,
.gerador-copy:hover > svg > path {
  fill: var(--focus-border-color);
  filter: brightness(1.1);
}

/* Estilização do corpo de configurações para geração de senha */

.gerador-configs {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.5rem;
}

/* Customização do botão de envio de formulário */

.form-button {
  grid-column: 1 / -1;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 1rem;
}

.password-size label,
.password-repeat label,
.password-symbols label {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.password-size input,
.password-repeat input,
.password-symbols input {
  width: 6rem;
  padding: 0.5rem;
  margin: 0.2rem 0;
}

.password-symbols input {
  width: 100%;
  max-width: 16rem;
  text-align: left;
}

.form-button button {
  padding: 0.5rem 1rem;
}

/* Mobile */

@media (max-width: 750px) {
  .gerador-configs {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 400px) {
  .gerador-configs {
    grid-template-columns: 1fr;
  }
}

/* Animações do site */

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translate3d(0, -10px, 0);
  }
  to {
    opacity: 1;
    transform: initial;
  }
}

.rotateAnimation {
  animation: rotateAnimation 0.5s forwards;
}

@keyframes rotateAnimation {
  to {
    transform: rotate(360deg);
  }
}
